knitr::opts_chunk$set(echo = TRUE)
library(tsibble)
library(fpp3)
# Data from: https://finance.yahoo.com/quote/SPY/history?period1=728265600&period2=1656374400&interval=1mo&filter=history&frequency=1mo&includeAdjustedClose=true
inputdata <- read.csv("D:/Personal/Alex/Uni/MS IA/2 Curso/Summer 2022/Predictive Models/Assignments/Week 7/SPY.csv")
# Convert Date column into Date format
inputdata$Date <- yearmonth(inputdata$Date)
# Convert df to tsibble format
inputdata %>%
as_tsibble(index = Date)  -> inputdata
inputdata
# Re-index based on trading days
SPY_Shares <- inputdata %>%
filter(year(Date)>=2017 & year(Date)<=2021) %>%
mutate(month = row_number()) #%>%
#update_tsibble(index = month, regular = TRUE)
SPY_Shares
SPY_Shares %>%
autoplot(Adj.Close) +
labs(y = "Price $US", title = "SPDR S&P 500 ETF Trust Adj. Price",
subtitle = "(2017 - 2021)")
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close), plot_type='partial')
fit <- SPY_Shares %>%
model('arima010' = ARIMA(Adj.Close ~ pdq(0,1,0)),
'arima111' = ARIMA(Adj.Close ~ pdq(1,1,1)),
'arima110' = ARIMA(Adj.Close ~ pdq(1,1,0)),
'arima011' = ARIMA(Adj.Close ~ pdq(0,1,1)),
'arima012' = ARIMA(Adj.Close ~ pdq(0,1,2)))
#report(fit)
fc <- fit %>%
forecast(h = 12)
fc %>%
autoplot(SPY_Shares) +
labs(y="Price $US", title="SPDR S&P 500 ETF Trust Adj. Price", subtitle = "ARIMA non-seasonal model (2017 - 2021)")
# Cross validation
# Time series cross-validation accuracy
SPY_Shares_tr <- SPY_Shares %>%
stretch_tsibble(.init = 36, .step = 1) %>%
relocate(Date, .id)
SPY_Shares_tr
# Forecast
SPY_Shares_Pred <- SPY_Shares_tr %>%
model('arima010' = ARIMA(Adj.Close ~ pdq(0,1,0)),
'arima111' = ARIMA(Adj.Close ~ pdq(1,1,1)),
'arima110' = ARIMA(Adj.Close ~ pdq(1,1,0)),
'arima011' = ARIMA(Adj.Close ~ pdq(0,1,1)),
'arima012' = ARIMA(Adj.Close ~ pdq(0,1,2))) %>%
forecast(h = 12)
# TSCV accuracy
SPY_Shares_Pred %>%
accuracy(SPY_Shares)
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close, 12), plot_type='partial')
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close, 12) %>% difference(),
plot_type='partial', lag=36)
fit <- SPY_Shares %>%
model('arima010011' = ARIMA(Adj.Close ~ pdq(0,1,0)+ PDQ(0,1,1)),
'arima017011' = ARIMA(Adj.Close ~ pdq(0,1,5)+ PDQ(0,1,1)),
'arima710110' = ARIMA(Adj.Close ~ pdq(5,1,0)+ PDQ(1,1,0)))
#report(fit)
fc <- fit %>%
forecast(h = 12)
fc %>%
autoplot(SPY_Shares) +
labs(y="Price $US", title="SPDR S&P 500 ETF Trust Adj. Price", subtitle = "ARIMA non-seasonal model (2017 - 2021)")
# Cross validation
# Time series cross-validation accuracy
SPY_Shares_tr <- SPY_Shares %>%
stretch_tsibble(.init = 36, .step = 1) %>%
relocate(Date, .id)
SPY_Shares_tr
# Forecast
SPY_Shares_Pred <- SPY_Shares_tr %>%
model('arima010011' = ARIMA(Adj.Close ~ pdq(0,1,0)+ PDQ(0,1,1)),
'arima015011' = ARIMA(Adj.Close ~ pdq(0,1,5)+ PDQ(0,1,1)),
'arima510110' = ARIMA(Adj.Close ~ pdq(5,1,0)+ PDQ(1,1,0))) %>%
forecast(h = 12)
# TSCV accuracy
SPY_Shares_Pred %>%
accuracy(SPY_Shares)
fit <- SPY_Shares %>%
model(auto = ARIMA(Adj.Close, stepwise = FALSE, approx = FALSE))
report(fit)
fit <- SPY_Shares %>%
model(auto = ARIMA(Adj.Close, stepwise = FALSE, approx = FALSE))
report(fit)
fc <- fit %>%
forecast(h = 12)
fc %>%
autoplot(SPY_Shares) +
labs(y="Price $US", title="SPDR S&P 500 ETF Trust Adj. Price", subtitle = "ARIMA automatically determined model(0,1,0) (2017 - 2021)")
# Cross validation
# Time series cross-validation accuracy
SPY_Shares_tr <- SPY_Shares %>%
stretch_tsibble(.init = 36, .step = 1) %>%
relocate(Date, .id)
SPY_Shares_tr
# Forecast
SPY_Shares_Pred <- SPY_Shares_tr %>%
model(auto = ARIMA(Adj.Close, stepwise = FALSE, approx = FALSE)) %>%
forecast(h = 12)
# TSCV accuracy
SPY_Shares_Pred %>%
accuracy(SPY_Shares)
# TSCV accuracy
SPY_Shares_Pred %>%
accuracy(SPY_Shares)
report(SPY_Shares_Pred)
fit
report(fit %>%select(arima010))
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close), plot_type='partial')
fit <- SPY_Shares %>%
model('arima010' = ARIMA(Adj.Close ~ pdq(0,1,0)),
'arima111' = ARIMA(Adj.Close ~ pdq(1,1,1)),
'arima110' = ARIMA(Adj.Close ~ pdq(1,1,0)),
'arima011' = ARIMA(Adj.Close ~ pdq(0,1,1)),
'arima012' = ARIMA(Adj.Close ~ pdq(0,1,2)))
#report(fit)
fc <- fit %>%
forecast(h = 12)
fc %>%
autoplot(SPY_Shares) +
labs(y="Price $US", title="SPDR S&P 500 ETF Trust Adj. Price", subtitle = "ARIMA non-seasonal model (2017 - 2021)")
# Cross validation
# Time series cross-validation accuracy
SPY_Shares_tr <- SPY_Shares %>%
stretch_tsibble(.init = 36, .step = 1) %>%
relocate(Date, .id)
SPY_Shares_tr
# Forecast
SPY_Shares_Pred <- SPY_Shares_tr %>%
model('arima010' = ARIMA(Adj.Close ~ pdq(0,1,0)),
'arima111' = ARIMA(Adj.Close ~ pdq(1,1,1)),
'arima110' = ARIMA(Adj.Close ~ pdq(1,1,0)),
'arima011' = ARIMA(Adj.Close ~ pdq(0,1,1)),
'arima012' = ARIMA(Adj.Close ~ pdq(0,1,2))) %>%
forecast(h = 12)
# TSCV accuracy
SPY_Shares_Pred %>%
accuracy(SPY_Shares)
report(fit %>%select(arima010))
knitr::opts_chunk$set(echo = TRUE)
library(tsibble)
library(fpp3)
# Data from: https://finance.yahoo.com/quote/SPY/history?period1=728265600&period2=1656374400&interval=1mo&filter=history&frequency=1mo&includeAdjustedClose=true
inputdata <- read.csv("D:/Personal/Alex/Uni/MS IA/2 Curso/Summer 2022/Predictive Models/Assignments/Week 7/SPY.csv")
# Convert Date column into Date format
inputdata$Date <- yearmonth(inputdata$Date)
# Convert df to tsibble format
inputdata %>%
as_tsibble(index = Date)  -> inputdata
inputdata
# Re-index based on trading days
SPY_Shares <- inputdata %>%
filter(year(Date)>=2017 & year(Date)<=2021) %>%
mutate(month = row_number()) #%>%
#update_tsibble(index = month, regular = TRUE)
SPY_Shares
SPY_Shares %>%
autoplot(Adj.Close) +
labs(y = "Price $US", title = "SPDR S&P 500 ETF Trust Adj. Price",
subtitle = "(2017 - 2021)")
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close), plot_type='partial')
fit <- SPY_Shares %>%
model('arima010' = ARIMA(Adj.Close ~ pdq(0,1,0)),
'arima111' = ARIMA(Adj.Close ~ pdq(1,1,1)),
'arima110' = ARIMA(Adj.Close ~ pdq(1,1,0)),
'arima011' = ARIMA(Adj.Close ~ pdq(0,1,1)),
'arima012' = ARIMA(Adj.Close ~ pdq(0,1,2)))
#report(fit)
fc <- fit %>%
forecast(h = 12)
fc %>%
autoplot(SPY_Shares) +
labs(y="Price $US", title="SPDR S&P 500 ETF Trust Adj. Price", subtitle = "ARIMA non-seasonal model (2017 - 2021)")
# Cross validation
# Time series cross-validation accuracy
SPY_Shares_tr <- SPY_Shares %>%
stretch_tsibble(.init = 36, .step = 1) %>%
relocate(Date, .id)
SPY_Shares_tr
# Forecast
SPY_Shares_Pred <- SPY_Shares_tr %>%
model('arima010' = ARIMA(Adj.Close ~ pdq(0,1,0)),
'arima111' = ARIMA(Adj.Close ~ pdq(1,1,1)),
'arima110' = ARIMA(Adj.Close ~ pdq(1,1,0)),
'arima011' = ARIMA(Adj.Close ~ pdq(0,1,1)),
'arima012' = ARIMA(Adj.Close ~ pdq(0,1,2))) %>%
forecast(h = 12)
# TSCV accuracy
SPY_Shares_Pred %>%
accuracy(SPY_Shares)
report(fit %>%select(arima010))
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close, 12), plot_type='partial')
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close, 12) %>% difference(),
plot_type='partial', lag=36)
fit <- SPY_Shares %>%
model('arima010011' = ARIMA(Adj.Close ~ pdq(0,1,0)+ PDQ(0,1,1)),
'arima017011' = ARIMA(Adj.Close ~ pdq(0,1,5)+ PDQ(0,1,1)),
'arima710110' = ARIMA(Adj.Close ~ pdq(5,1,0)+ PDQ(1,1,0)))
#report(fit)
fc <- fit %>%
forecast(h = 12)
fc %>%
autoplot(SPY_Shares) +
labs(y="Price $US", title="SPDR S&P 500 ETF Trust Adj. Price", subtitle = "ARIMA seasonal model (2017 - 2021)")
# Cross validation
# Time series cross-validation accuracy
SPY_Shares_tr <- SPY_Shares %>%
stretch_tsibble(.init = 36, .step = 1) %>%
relocate(Date, .id)
SPY_Shares_tr
# Forecast
SPY_Shares_Pred <- SPY_Shares_tr %>%
model('arima010011' = ARIMA(Adj.Close ~ pdq(0,1,0)+ PDQ(0,1,1)),
'arima015011' = ARIMA(Adj.Close ~ pdq(0,1,5)+ PDQ(0,1,1)),
'arima510110' = ARIMA(Adj.Close ~ pdq(5,1,0)+ PDQ(1,1,0))) %>%
forecast(h = 12)
# TSCV accuracy
SPY_Shares_Pred %>%
accuracy(SPY_Shares)
report(fit %>%select(arima510110))
report(SPY_Shares_Pred %>%select(arima510110))
knitr::opts_chunk$set(echo = TRUE)
library(tsibble)
library(fpp3)
# Data from: https://finance.yahoo.com/quote/SPY/history?period1=728265600&period2=1656374400&interval=1mo&filter=history&frequency=1mo&includeAdjustedClose=true
inputdata <- read.csv("D:/Personal/Alex/Uni/MS IA/2 Curso/Summer 2022/Predictive Models/Assignments/Week 7/SPY.csv")
# Convert Date column into Date format
inputdata$Date <- yearmonth(inputdata$Date)
# Convert df to tsibble format
inputdata %>%
as_tsibble(index = Date)  -> inputdata
inputdata
# Re-index based on trading days
SPY_Shares <- inputdata %>%
filter(year(Date)>=2017 & year(Date)<=2021) %>%
mutate(month = row_number()) #%>%
#update_tsibble(index = month, regular = TRUE)
SPY_Shares
SPY_Shares %>%
autoplot(Adj.Close) +
labs(y = "Price $US", title = "SPDR S&P 500 ETF Trust Adj. Price",
subtitle = "(2017 - 2021)")
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close), plot_type='partial')
fit <- SPY_Shares %>%
model('arima010' = ARIMA(Adj.Close ~ pdq(0,1,0)),
'arima111' = ARIMA(Adj.Close ~ pdq(1,1,1)),
'arima110' = ARIMA(Adj.Close ~ pdq(1,1,0)),
'arima011' = ARIMA(Adj.Close ~ pdq(0,1,1)),
'arima012' = ARIMA(Adj.Close ~ pdq(0,1,2)))
#report(fit)
fc <- fit %>%
forecast(h = 12)
fc %>%
autoplot(SPY_Shares) +
labs(y="Price $US", title="SPDR S&P 500 ETF Trust Adj. Price", subtitle = "ARIMA non-seasonal model (2017 - 2021)")
# Cross validation
# Time series cross-validation accuracy
SPY_Shares_tr <- SPY_Shares %>%
stretch_tsibble(.init = 36, .step = 1) %>%
relocate(Date, .id)
SPY_Shares_tr
# Forecast
SPY_Shares_Pred <- SPY_Shares_tr %>%
model('arima010' = ARIMA(Adj.Close ~ pdq(0,1,0)),
'arima111' = ARIMA(Adj.Close ~ pdq(1,1,1)),
'arima110' = ARIMA(Adj.Close ~ pdq(1,1,0)),
'arima011' = ARIMA(Adj.Close ~ pdq(0,1,1)),
'arima012' = ARIMA(Adj.Close ~ pdq(0,1,2))) %>%
forecast(h = 12)
# TSCV accuracy
SPY_Shares_Pred %>%
accuracy(SPY_Shares)
report(fit %>%select(arima010))
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close, 12), plot_type='partial')
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close, 12) %>% difference(),
plot_type='partial', lag=36)
fit <- SPY_Shares %>%
model('arima010011' = ARIMA(Adj.Close ~ pdq(0,1,0)+ PDQ(0,1,1)),
'arima017011' = ARIMA(Adj.Close ~ pdq(0,1,5)+ PDQ(0,1,1)),
'arima710110' = ARIMA(Adj.Close ~ pdq(5,1,0)+ PDQ(1,1,0)))
#report(fit)
fc <- fit %>%
forecast(h = 12)
fc %>%
autoplot(SPY_Shares) +
labs(y="Price $US", title="SPDR S&P 500 ETF Trust Adj. Price", subtitle = "ARIMA seasonal model (2017 - 2021)")
# Cross validation
# Time series cross-validation accuracy
SPY_Shares_tr <- SPY_Shares %>%
stretch_tsibble(.init = 36, .step = 1) %>%
relocate(Date, .id)
SPY_Shares_tr
# Forecast
SPY_Shares_Pred <- SPY_Shares_tr %>%
model('arima010011' = ARIMA(Adj.Close ~ pdq(0,1,0)+ PDQ(0,1,1)),
'arima015011' = ARIMA(Adj.Close ~ pdq(0,1,5)+ PDQ(0,1,1)),
'arima510110' = ARIMA(Adj.Close ~ pdq(5,1,0)+ PDQ(1,1,0))) %>%
forecast(h = 12)
# TSCV accuracy
SPY_Shares_Pred %>%
accuracy(SPY_Shares)
report(SPY_Shares_Pred %>%select(arima510110))
#report(SPY_Shares_Pred %>%select(arima510110))
SPY_Shares_Pred
knitr::opts_chunk$set(echo = TRUE)
library(tsibble)
library(fpp3)
# Data from: https://finance.yahoo.com/quote/SPY/history?period1=728265600&period2=1656374400&interval=1mo&filter=history&frequency=1mo&includeAdjustedClose=true
inputdata <- read.csv("D:/Personal/Alex/Uni/MS IA/2 Curso/Summer 2022/Predictive Models/Assignments/Week 7/SPY.csv")
# Convert Date column into Date format
inputdata$Date <- yearmonth(inputdata$Date)
# Convert df to tsibble format
inputdata %>%
as_tsibble(index = Date)  -> inputdata
inputdata
# Re-index based on trading days
SPY_Shares <- inputdata %>%
filter(year(Date)>=2017 & year(Date)<=2021) %>%
mutate(month = row_number()) #%>%
#update_tsibble(index = month, regular = TRUE)
SPY_Shares
SPY_Shares %>%
autoplot(Adj.Close) +
labs(y = "Price $US", title = "SPDR S&P 500 ETF Trust Adj. Price",
subtitle = "(2017 - 2021)")
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close), plot_type='partial')
fit <- SPY_Shares %>%
model('arima010' = ARIMA(Adj.Close ~ pdq(0,1,0)),
'arima111' = ARIMA(Adj.Close ~ pdq(1,1,1)),
'arima110' = ARIMA(Adj.Close ~ pdq(1,1,0)),
'arima011' = ARIMA(Adj.Close ~ pdq(0,1,1)),
'arima012' = ARIMA(Adj.Close ~ pdq(0,1,2)))
#report(fit)
fc <- fit %>%
forecast(h = 12)
fc %>%
autoplot(SPY_Shares) +
labs(y="Price $US", title="SPDR S&P 500 ETF Trust Adj. Price", subtitle = "ARIMA non-seasonal model (2017 - 2021)")
knitr::opts_chunk$set(echo = TRUE)
library(tsibble)
library(fpp3)
# Data from: https://finance.yahoo.com/quote/SPY/history?period1=728265600&period2=1656374400&interval=1mo&filter=history&frequency=1mo&includeAdjustedClose=true
inputdata <- read.csv("D:/Personal/Alex/Uni/MS IA/2 Curso/Summer 2022/Predictive Models/Assignments/Week 7/SPY.csv")
# Convert Date column into Date format
inputdata$Date <- yearmonth(inputdata$Date)
# Convert df to tsibble format
inputdata %>%
as_tsibble(index = Date)  -> inputdata
inputdata
# Re-index based on trading days
SPY_Shares <- inputdata %>%
filter(year(Date)>=2017 & year(Date)<=2021) %>%
mutate(month = row_number()) #%>%
#update_tsibble(index = month, regular = TRUE)
SPY_Shares
SPY_Shares %>%
autoplot(Adj.Close) +
labs(y = "Price $US", title = "SPDR S&P 500 ETF Trust Adj. Price",
subtitle = "(2017 - 2021)")
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close), plot_type='partial')
fit <- SPY_Shares %>%
model('arima010' = ARIMA(Adj.Close ~ pdq(0,1,0)),
'arima111' = ARIMA(Adj.Close ~ pdq(1,1,1)),
'arima110' = ARIMA(Adj.Close ~ pdq(1,1,0)),
'arima011' = ARIMA(Adj.Close ~ pdq(0,1,1)),
'arima012' = ARIMA(Adj.Close ~ pdq(0,1,2)))
#report(fit)
fc <- fit %>%
forecast(h = 12)
fc %>%
autoplot(SPY_Shares) +
labs(y="Price $US", title="SPDR S&P 500 ETF Trust Adj. Price", subtitle = "ARIMA non-seasonal model (2017 - 2021)")
# Cross validation
# Time series cross-validation accuracy
SPY_Shares_tr <- SPY_Shares %>%
stretch_tsibble(.init = 36, .step = 1) %>%
relocate(Date, .id)
SPY_Shares_tr
# Forecast
SPY_Shares_Pred <- SPY_Shares_tr %>%
model('arima010' = ARIMA(Adj.Close ~ pdq(0,1,0)),
'arima111' = ARIMA(Adj.Close ~ pdq(1,1,1)),
'arima110' = ARIMA(Adj.Close ~ pdq(1,1,0)),
'arima011' = ARIMA(Adj.Close ~ pdq(0,1,1)),
'arima012' = ARIMA(Adj.Close ~ pdq(0,1,2))) %>%
forecast(h = 12)
# TSCV accuracy
SPY_Shares_Pred %>%
accuracy(SPY_Shares)
report(fit %>%select(arima010))
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close, 12), plot_type='partial')
SPY_Shares %>%
gg_tsdisplay(difference(Adj.Close, 12) %>% difference(),
plot_type='partial', lag=36)
fit <- SPY_Shares %>%
model('arima010011' = ARIMA(Adj.Close ~ pdq(0,1,0)+ PDQ(0,1,1)),
'arima015011' = ARIMA(Adj.Close ~ pdq(0,1,5)+ PDQ(0,1,1)),
'arima510110' = ARIMA(Adj.Close ~ pdq(5,1,0)+ PDQ(1,1,0)))
#report(fit)
fc <- fit %>%
forecast(h = 12)
fc %>%
autoplot(SPY_Shares) +
labs(y="Price $US", title="SPDR S&P 500 ETF Trust Adj. Price", subtitle = "ARIMA seasonal model (2017 - 2021)")
# Cross validation
# Time series cross-validation accuracy
SPY_Shares_tr <- SPY_Shares %>%
stretch_tsibble(.init = 36, .step = 1) %>%
relocate(Date, .id)
SPY_Shares_tr
# Forecast
SPY_Shares_Pred <- SPY_Shares_tr %>%
model('arima010011' = ARIMA(Adj.Close ~ pdq(0,1,0)+ PDQ(0,1,1)),
'arima015011' = ARIMA(Adj.Close ~ pdq(0,1,5)+ PDQ(0,1,1)),
'arima510110' = ARIMA(Adj.Close ~ pdq(5,1,0)+ PDQ(1,1,0))) %>%
forecast(h = 12)
# TSCV accuracy
SPY_Shares_Pred %>%
accuracy(SPY_Shares)
report(fit %>%select(arima510110))
fit <- SPY_Shares %>%
model(auto = ARIMA(Adj.Close, stepwise = FALSE, approx = FALSE))
report(fit)
fc <- fit %>%
forecast(h = 12)
fc %>%
autoplot(SPY_Shares) +
labs(y="Price $US", title="SPDR S&P 500 ETF Trust Adj. Price", subtitle = "ARIMA automatically determined model(0,1,0) (2017 - 2021)")
# Cross validation
# Time series cross-validation accuracy
SPY_Shares_tr <- SPY_Shares %>%
stretch_tsibble(.init = 36, .step = 1) %>%
relocate(Date, .id)
SPY_Shares_tr
# Forecast
SPY_Shares_Pred <- SPY_Shares_tr %>%
model(auto = ARIMA(Adj.Close, stepwise = FALSE, approx = FALSE)) %>%
forecast(h = 12)
# TSCV accuracy
SPY_Shares_Pred %>%
accuracy(SPY_Shares)
report(fit)
